//
//Copyright 2019-Present Couchbase, Inc.
//
//Use of this software is governed by the Business Source License included in
//the file licenses/BSL-Couchbase.txt.  As of the Change Date specified in that
//file, in accordance with the Business Source License, use of this software will
//be governed by the Apache License, Version 2.0, included in the file
//licenses/APL2.txt.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: protobuf/search.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":     0,
		"SERVING":     1,
		"NOT_SERVING": 2,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_search_proto_enumTypes[0].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_protobuf_search_proto_enumTypes[0]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_search_proto_rawDescGZIP(), []int{1, 0}
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_protobuf_search_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_search_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_search_proto_rawDescGZIP(), []int{0}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Status        HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=search.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_protobuf_search_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_search_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_search_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

type DocCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexName     string                 `protobuf:"bytes,1,opt,name=IndexName,proto3" json:"IndexName,omitempty"`
	IndexUUID     string                 `protobuf:"bytes,2,opt,name=IndexUUID,proto3" json:"IndexUUID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocCountRequest) Reset() {
	*x = DocCountRequest{}
	mi := &file_protobuf_search_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocCountRequest) ProtoMessage() {}

func (x *DocCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_search_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocCountRequest.ProtoReflect.Descriptor instead.
func (*DocCountRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_search_proto_rawDescGZIP(), []int{2}
}

func (x *DocCountRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *DocCountRequest) GetIndexUUID() string {
	if x != nil {
		return x.IndexUUID
	}
	return ""
}

type DocCountResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocCount      int64                  `protobuf:"varint,1,opt,name=DocCount,proto3" json:"DocCount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocCountResult) Reset() {
	*x = DocCountResult{}
	mi := &file_protobuf_search_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocCountResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocCountResult) ProtoMessage() {}

func (x *DocCountResult) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_search_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocCountResult.ProtoReflect.Descriptor instead.
func (*DocCountResult) Descriptor() ([]byte, []int) {
	return file_protobuf_search_proto_rawDescGZIP(), []int{3}
}

func (x *DocCountResult) GetDocCount() int64 {
	if x != nil {
		return x.DocCount
	}
	return 0
}

// Key is partition or partition/partitionUUID.  Value is seq.
// For example, a DCP data source might have the key as either
// "vbucketId" or "vbucketId/vbucketUUID".
type ConsistencyVectors struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ConsistencyVector map[string]uint64      `protobuf:"bytes,1,rep,name=ConsistencyVector,proto3" json:"ConsistencyVector,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ConsistencyVectors) Reset() {
	*x = ConsistencyVectors{}
	mi := &file_protobuf_search_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsistencyVectors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsistencyVectors) ProtoMessage() {}

func (x *ConsistencyVectors) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_search_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsistencyVectors.ProtoReflect.Descriptor instead.
func (*ConsistencyVectors) Descriptor() ([]byte, []int) {
	return file_protobuf_search_proto_rawDescGZIP(), []int{4}
}

func (x *ConsistencyVectors) GetConsistencyVector() map[string]uint64 {
	if x != nil {
		return x.ConsistencyVector
	}
	return nil
}

// ConsistencyParams represent the consistency requirements of a
// client's request.
type ConsistencyParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A Level value of "" means stale is ok; "at_plus" means we need
	// consistency at least at or beyond the consistency vector but
	// not before.
	Level string `protobuf:"bytes,1,opt,name=Level,proto3" json:"Level,omitempty"`
	// Keyed by indexName.
	Vectors       map[string]*ConsistencyVectors `protobuf:"bytes,2,rep,name=Vectors,proto3" json:"Vectors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Results       string                         `protobuf:"bytes,3,opt,name=Results,proto3" json:"Results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsistencyParams) Reset() {
	*x = ConsistencyParams{}
	mi := &file_protobuf_search_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsistencyParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsistencyParams) ProtoMessage() {}

func (x *ConsistencyParams) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_search_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsistencyParams.ProtoReflect.Descriptor instead.
func (*ConsistencyParams) Descriptor() ([]byte, []int) {
	return file_protobuf_search_proto_rawDescGZIP(), []int{5}
}

func (x *ConsistencyParams) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *ConsistencyParams) GetVectors() map[string]*ConsistencyVectors {
	if x != nil {
		return x.Vectors
	}
	return nil
}

func (x *ConsistencyParams) GetResults() string {
	if x != nil {
		return x.Results
	}
	return ""
}

// QueryCtl defines the JSON parameters that control query execution
// and which are independent of any specific pindex type.
type QueryCtl struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Timeout            int64                  `protobuf:"varint,1,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	Consistency        *ConsistencyParams     `protobuf:"bytes,2,opt,name=Consistency,proto3" json:"Consistency,omitempty"`
	PartitionSelection string                 `protobuf:"bytes,3,opt,name=PartitionSelection,proto3" json:"PartitionSelection,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *QueryCtl) Reset() {
	*x = QueryCtl{}
	mi := &file_protobuf_search_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryCtl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCtl) ProtoMessage() {}

func (x *QueryCtl) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_search_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCtl.ProtoReflect.Descriptor instead.
func (*QueryCtl) Descriptor() ([]byte, []int) {
	return file_protobuf_search_proto_rawDescGZIP(), []int{6}
}

func (x *QueryCtl) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *QueryCtl) GetConsistency() *ConsistencyParams {
	if x != nil {
		return x.Consistency
	}
	return nil
}

func (x *QueryCtl) GetPartitionSelection() string {
	if x != nil {
		return x.PartitionSelection
	}
	return ""
}

// QueryCtlParams defines the JSON that includes the "ctl" part of a
// query request.  These "ctl" query request parameters are
// independent of any specific pindex type.
type QueryCtlParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ctl           *QueryCtl              `protobuf:"bytes,1,opt,name=Ctl,proto3" json:"Ctl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryCtlParams) Reset() {
	*x = QueryCtlParams{}
	mi := &file_protobuf_search_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryCtlParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCtlParams) ProtoMessage() {}

func (x *QueryCtlParams) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_search_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCtlParams.ProtoReflect.Descriptor instead.
func (*QueryCtlParams) Descriptor() ([]byte, []int) {
	return file_protobuf_search_proto_rawDescGZIP(), []int{7}
}

func (x *QueryCtlParams) GetCtl() *QueryCtl {
	if x != nil {
		return x.Ctl
	}
	return nil
}

type QueryPIndexes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An empty or nil PIndexNames means the query should use all
	// the pindexes of the index.
	PIndexNames   []string `protobuf:"bytes,1,rep,name=PIndexNames,proto3" json:"PIndexNames,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPIndexes) Reset() {
	*x = QueryPIndexes{}
	mi := &file_protobuf_search_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPIndexes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPIndexes) ProtoMessage() {}

func (x *QueryPIndexes) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_search_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPIndexes.ProtoReflect.Descriptor instead.
func (*QueryPIndexes) Descriptor() ([]byte, []int) {
	return file_protobuf_search_proto_rawDescGZIP(), []int{8}
}

func (x *QueryPIndexes) GetPIndexNames() []string {
	if x != nil {
		return x.PIndexNames
	}
	return nil
}

type SearchRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Contents       []byte                 `protobuf:"bytes,1,opt,name=Contents,proto3" json:"Contents,omitempty"`
	IndexName      string                 `protobuf:"bytes,2,opt,name=IndexName,proto3" json:"IndexName,omitempty"`
	IndexUUID      string                 `protobuf:"bytes,3,opt,name=IndexUUID,proto3" json:"IndexUUID,omitempty"`
	Stream         bool                   `protobuf:"varint,4,opt,name=Stream,proto3" json:"Stream,omitempty"`
	QueryCtlParams []byte                 `protobuf:"bytes,5,opt,name=QueryCtlParams,proto3" json:"QueryCtlParams,omitempty"`
	QueryPIndexes  []byte                 `protobuf:"bytes,6,opt,name=QueryPIndexes,proto3" json:"QueryPIndexes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_protobuf_search_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_search_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_search_proto_rawDescGZIP(), []int{9}
}

func (x *SearchRequest) GetContents() []byte {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *SearchRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *SearchRequest) GetIndexUUID() string {
	if x != nil {
		return x.IndexUUID
	}
	return ""
}

func (x *SearchRequest) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

func (x *SearchRequest) GetQueryCtlParams() []byte {
	if x != nil {
		return x.QueryCtlParams
	}
	return nil
}

func (x *SearchRequest) GetQueryPIndexes() []byte {
	if x != nil {
		return x.QueryPIndexes
	}
	return nil
}

type SearchResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contents      []byte                 `protobuf:"bytes,1,opt,name=Contents,proto3" json:"Contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	mi := &file_protobuf_search_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_search_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_protobuf_search_proto_rawDescGZIP(), []int{10}
}

func (x *SearchResult) GetContents() []byte {
	if x != nil {
		return x.Contents
	}
	return nil
}

// A stream SearchResult describes the streaming results
// of executing a SearchRequest.
type StreamSearchResults struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Contents:
	//
	//	*StreamSearchResults_Hits
	//	*StreamSearchResults_SearchResult
	Contents      isStreamSearchResults_Contents `protobuf_oneof:"Contents"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamSearchResults) Reset() {
	*x = StreamSearchResults{}
	mi := &file_protobuf_search_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamSearchResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamSearchResults) ProtoMessage() {}

func (x *StreamSearchResults) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_search_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamSearchResults.ProtoReflect.Descriptor instead.
func (*StreamSearchResults) Descriptor() ([]byte, []int) {
	return file_protobuf_search_proto_rawDescGZIP(), []int{11}
}

func (x *StreamSearchResults) GetContents() isStreamSearchResults_Contents {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *StreamSearchResults) GetHits() *StreamSearchResults_Batch {
	if x != nil {
		if x, ok := x.Contents.(*StreamSearchResults_Hits); ok {
			return x.Hits
		}
	}
	return nil
}

func (x *StreamSearchResults) GetSearchResult() []byte {
	if x != nil {
		if x, ok := x.Contents.(*StreamSearchResults_SearchResult); ok {
			return x.SearchResult
		}
	}
	return nil
}

type isStreamSearchResults_Contents interface {
	isStreamSearchResults_Contents()
}

type StreamSearchResults_Hits struct {
	Hits *StreamSearchResults_Batch `protobuf:"bytes,1,opt,name=Hits,proto3,oneof"`
}

type StreamSearchResults_SearchResult struct {
	SearchResult []byte `protobuf:"bytes,2,opt,name=SearchResult,proto3,oneof"`
}

func (*StreamSearchResults_Hits) isStreamSearchResults_Contents() {}

func (*StreamSearchResults_SearchResult) isStreamSearchResults_Contents() {}

type StreamSearchResults_Batch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bytes         []byte                 `protobuf:"bytes,1,opt,name=Bytes,proto3" json:"Bytes,omitempty"`
	Offsets       []uint64               `protobuf:"varint,2,rep,packed,name=Offsets,proto3" json:"Offsets,omitempty"`
	Total         uint64                 `protobuf:"varint,3,opt,name=Total,proto3" json:"Total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamSearchResults_Batch) Reset() {
	*x = StreamSearchResults_Batch{}
	mi := &file_protobuf_search_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamSearchResults_Batch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamSearchResults_Batch) ProtoMessage() {}

func (x *StreamSearchResults_Batch) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_search_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamSearchResults_Batch.ProtoReflect.Descriptor instead.
func (*StreamSearchResults_Batch) Descriptor() ([]byte, []int) {
	return file_protobuf_search_proto_rawDescGZIP(), []int{11, 0}
}

func (x *StreamSearchResults_Batch) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *StreamSearchResults_Batch) GetOffsets() []uint64 {
	if x != nil {
		return x.Offsets
	}
	return nil
}

func (x *StreamSearchResults_Batch) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_protobuf_search_proto protoreflect.FileDescriptor

const file_protobuf_search_proto_rawDesc = "" +
	"\n" +
	"\x15protobuf/search.proto\x12\x06search\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\x94\x01\n" +
	"\x13HealthCheckResponse\x12A\n" +
	"\x06status\x18\x01 \x01(\x0e2).search.HealthCheckResponse.ServingStatusR\x06status\":\n" +
	"\rServingStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x02\"M\n" +
	"\x0fDocCountRequest\x12\x1c\n" +
	"\tIndexName\x18\x01 \x01(\tR\tIndexName\x12\x1c\n" +
	"\tIndexUUID\x18\x02 \x01(\tR\tIndexUUID\",\n" +
	"\x0eDocCountResult\x12\x1a\n" +
	"\bDocCount\x18\x01 \x01(\x03R\bDocCount\"\xbb\x01\n" +
	"\x12ConsistencyVectors\x12_\n" +
	"\x11ConsistencyVector\x18\x01 \x03(\v21.search.ConsistencyVectors.ConsistencyVectorEntryR\x11ConsistencyVector\x1aD\n" +
	"\x16ConsistencyVectorEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\"\xdd\x01\n" +
	"\x11ConsistencyParams\x12\x14\n" +
	"\x05Level\x18\x01 \x01(\tR\x05Level\x12@\n" +
	"\aVectors\x18\x02 \x03(\v2&.search.ConsistencyParams.VectorsEntryR\aVectors\x12\x18\n" +
	"\aResults\x18\x03 \x01(\tR\aResults\x1aV\n" +
	"\fVectorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x120\n" +
	"\x05value\x18\x02 \x01(\v2\x1a.search.ConsistencyVectorsR\x05value:\x028\x01\"\x91\x01\n" +
	"\bQueryCtl\x12\x18\n" +
	"\aTimeout\x18\x01 \x01(\x03R\aTimeout\x12;\n" +
	"\vConsistency\x18\x02 \x01(\v2\x19.search.ConsistencyParamsR\vConsistency\x12.\n" +
	"\x12PartitionSelection\x18\x03 \x01(\tR\x12PartitionSelection\"4\n" +
	"\x0eQueryCtlParams\x12\"\n" +
	"\x03Ctl\x18\x01 \x01(\v2\x10.search.QueryCtlR\x03Ctl\"1\n" +
	"\rQueryPIndexes\x12 \n" +
	"\vPIndexNames\x18\x01 \x03(\tR\vPIndexNames\"\xcd\x01\n" +
	"\rSearchRequest\x12\x1a\n" +
	"\bContents\x18\x01 \x01(\fR\bContents\x12\x1c\n" +
	"\tIndexName\x18\x02 \x01(\tR\tIndexName\x12\x1c\n" +
	"\tIndexUUID\x18\x03 \x01(\tR\tIndexUUID\x12\x16\n" +
	"\x06Stream\x18\x04 \x01(\bR\x06Stream\x12&\n" +
	"\x0eQueryCtlParams\x18\x05 \x01(\fR\x0eQueryCtlParams\x12$\n" +
	"\rQueryPIndexes\x18\x06 \x01(\fR\rQueryPIndexes\"*\n" +
	"\fSearchResult\x12\x1a\n" +
	"\bContents\x18\x01 \x01(\fR\bContents\"\xcf\x01\n" +
	"\x13StreamSearchResults\x127\n" +
	"\x04Hits\x18\x01 \x01(\v2!.search.StreamSearchResults.BatchH\x00R\x04Hits\x12$\n" +
	"\fSearchResult\x18\x02 \x01(\fH\x00R\fSearchResult\x1aM\n" +
	"\x05Batch\x12\x14\n" +
	"\x05Bytes\x18\x01 \x01(\fR\x05Bytes\x12\x18\n" +
	"\aOffsets\x18\x02 \x03(\x04R\aOffsets\x12\x14\n" +
	"\x05Total\x18\x03 \x01(\x04R\x05TotalB\n" +
	"\n" +
	"\bContents2\xce\x01\n" +
	"\rSearchService\x12>\n" +
	"\x06Search\x12\x15.search.SearchRequest\x1a\x1b.search.StreamSearchResults0\x01\x12@\n" +
	"\x05Check\x12\x1a.search.HealthCheckRequest\x1a\x1b.search.HealthCheckResponse\x12;\n" +
	"\bDocCount\x12\x17.search.DocCountRequest\x1a\x16.search.DocCountResultb\x06proto3"

var (
	file_protobuf_search_proto_rawDescOnce sync.Once
	file_protobuf_search_proto_rawDescData []byte
)

func file_protobuf_search_proto_rawDescGZIP() []byte {
	file_protobuf_search_proto_rawDescOnce.Do(func() {
		file_protobuf_search_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protobuf_search_proto_rawDesc), len(file_protobuf_search_proto_rawDesc)))
	})
	return file_protobuf_search_proto_rawDescData
}

var file_protobuf_search_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protobuf_search_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_protobuf_search_proto_goTypes = []any{
	(HealthCheckResponse_ServingStatus)(0), // 0: search.HealthCheckResponse.ServingStatus
	(*HealthCheckRequest)(nil),             // 1: search.HealthCheckRequest
	(*HealthCheckResponse)(nil),            // 2: search.HealthCheckResponse
	(*DocCountRequest)(nil),                // 3: search.DocCountRequest
	(*DocCountResult)(nil),                 // 4: search.DocCountResult
	(*ConsistencyVectors)(nil),             // 5: search.ConsistencyVectors
	(*ConsistencyParams)(nil),              // 6: search.ConsistencyParams
	(*QueryCtl)(nil),                       // 7: search.QueryCtl
	(*QueryCtlParams)(nil),                 // 8: search.QueryCtlParams
	(*QueryPIndexes)(nil),                  // 9: search.QueryPIndexes
	(*SearchRequest)(nil),                  // 10: search.SearchRequest
	(*SearchResult)(nil),                   // 11: search.SearchResult
	(*StreamSearchResults)(nil),            // 12: search.StreamSearchResults
	nil,                                    // 13: search.ConsistencyVectors.ConsistencyVectorEntry
	nil,                                    // 14: search.ConsistencyParams.VectorsEntry
	(*StreamSearchResults_Batch)(nil),      // 15: search.StreamSearchResults.Batch
}
var file_protobuf_search_proto_depIdxs = []int32{
	0,  // 0: search.HealthCheckResponse.status:type_name -> search.HealthCheckResponse.ServingStatus
	13, // 1: search.ConsistencyVectors.ConsistencyVector:type_name -> search.ConsistencyVectors.ConsistencyVectorEntry
	14, // 2: search.ConsistencyParams.Vectors:type_name -> search.ConsistencyParams.VectorsEntry
	6,  // 3: search.QueryCtl.Consistency:type_name -> search.ConsistencyParams
	7,  // 4: search.QueryCtlParams.Ctl:type_name -> search.QueryCtl
	15, // 5: search.StreamSearchResults.Hits:type_name -> search.StreamSearchResults.Batch
	5,  // 6: search.ConsistencyParams.VectorsEntry.value:type_name -> search.ConsistencyVectors
	10, // 7: search.SearchService.Search:input_type -> search.SearchRequest
	1,  // 8: search.SearchService.Check:input_type -> search.HealthCheckRequest
	3,  // 9: search.SearchService.DocCount:input_type -> search.DocCountRequest
	12, // 10: search.SearchService.Search:output_type -> search.StreamSearchResults
	2,  // 11: search.SearchService.Check:output_type -> search.HealthCheckResponse
	4,  // 12: search.SearchService.DocCount:output_type -> search.DocCountResult
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_protobuf_search_proto_init() }
func file_protobuf_search_proto_init() {
	if File_protobuf_search_proto != nil {
		return
	}
	file_protobuf_search_proto_msgTypes[11].OneofWrappers = []any{
		(*StreamSearchResults_Hits)(nil),
		(*StreamSearchResults_SearchResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protobuf_search_proto_rawDesc), len(file_protobuf_search_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_search_proto_goTypes,
		DependencyIndexes: file_protobuf_search_proto_depIdxs,
		EnumInfos:         file_protobuf_search_proto_enumTypes,
		MessageInfos:      file_protobuf_search_proto_msgTypes,
	}.Build()
	File_protobuf_search_proto = out.File
	file_protobuf_search_proto_goTypes = nil
	file_protobuf_search_proto_depIdxs = nil
}
